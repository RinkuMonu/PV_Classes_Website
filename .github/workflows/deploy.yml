name: Deploy Next.js (pvclasses.in) to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🛠 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 📦 Install deps & Build Next.js
      # yahan hum build karenge aur ek clean snapshot banaenge
        run: |
          npm install --legacy-peer-deps
          npm run build

          # snapshot folder banao
          mkdir release

          # runtime files copy karo
          cp -r .next release/.next
          cp -r node_modules release/node_modules
          cp -r public release/public
          cp -r src release/src

          # root level configs jo prod me chahiye
          cp package.json release/package.json
          cp package-lock.json release/package-lock.json
          cp next.config.mjs release/next.config.mjs
          cp ecosystem.config.js release/ecosystem.config.js || true
          cp jsconfig.json release/jsconfig.json || true
          cp tsconfig.json release/tsconfig.json || true

          # NOTE: .env intentionally NOT copied (server pe rahega)
          # ab pura release ko tar karo
          tar -czvf pvclasses_site_release.tar.gz -C release .

      - name: 🔑 Prepare SSH Key file
        run: |
          echo "${{ secrets.NEXT4_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: 🚀 Upload snapshot to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.NEXT4_SSH_HOST }}
          username: ${{ secrets.NEXT4_SSH_USER }}
          port: ${{ secrets.NEXT4_SSH_PORT }}
          key: ${{ secrets.NEXT4_SSH_KEY }}
          source: "pvclasses_site_release.tar.gz"
          target: "/home/pvclasses.in/"

      - name: 🔄 Deploy on EC2 & restart PM2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NEXT4_SSH_HOST }}
          username: ${{ secrets.NEXT4_SSH_USER }}
          port: ${{ secrets.NEXT4_SSH_PORT }}
          key: ${{ secrets.NEXT4_SSH_KEY }}
          script: |
            set -e

            APP_DIR="/home/pvclasses.in/PV_Classes_Website-main"
            TAR_PATH="/home/pvclasses.in/pvclasses_site_release.tar.gz"
            BACKUP_BASE="/home/pvclasses.in/deploy_backups"
            TS=$(date +%Y%m%d_%H%M%S)

            echo "📁 Ensure backup dir"
            mkdir -p $BACKUP_BASE

            echo "🔐 Backup .env if present"
            if [ -f "$APP_DIR/.env" ]; then
              cp "$APP_DIR/.env" "/home/pvclasses.in/.env_pvclasses_site_backup"
            fi

            echo "💾 Snapshot old code"
            cp -r "$APP_DIR" "$BACKUP_BASE/PV_Classes_Website-main_$TS" || true

            echo "🧼 Clean old deploy contents in APP_DIR"
            find "$APP_DIR" -mindepth 1 -maxdepth 1 -exec rm -rf {} +

            echo "📦 Extract new release bundle"
            tar -xzvf "$TAR_PATH" -C "$APP_DIR"

            echo "🗑 Remove uploaded tar"
            rm -f "$TAR_PATH"

            echo "♻ Restore .env"
            if [ -f "/home/pvclasses.in/.env_pvclasses_site_backup" ]; then
              mv "/home/pvclasses.in/.env_pvclasses_site_backup" "$APP_DIR/.env"
            fi

            echo "📂 cd into app"
            cd "$APP_DIR"

            echo "🚀 Restart PM2 for pvclasses.in-site"
            pm2 delete pvclasses.in-site || true

            if [ -f ecosystem.config.js ]; then
              # preferred path: ecosystem
              pm2 start ecosystem.config.js --only pvclasses.in || pm2 start ecosystem.config.js
            else
              # fallback direct start on port 3006
              pm2 start node_modules/next/dist/bin/next --name pvclasses.in -- start -p 3006
            fi

            pm2 save

            echo "✅ Deployment done for pvclasses.in-site"
